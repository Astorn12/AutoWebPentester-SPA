import { PentestOutcomeAgent } from './../_model/pentestOutcomeAgent';
import { PentestWithDetailsAgent } from './../_model/pentestWithDetailsAgent';
import { Observable } from 'rxjs';
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { environment } from 'src/environments/environment';
import { TagKind } from '../_model/TagKind';
import { Pentest } from '../_model/pentest';
import { PentestWithDetails } from '../_model/pentestWithDetails';
import { PentestToCarryOn } from '../_model/pentestToCarryOn';
import { Website } from '../_model/website';
import { Resource } from '../_model/resource';

@Injectable({
  providedIn: 'root'
})
export class PentestService {

  baseUrl= environment.apiUrl + 'pentest/';

constructor(private http: HttpClient) { }


getAttackSort(): Observable<TagKind> {
  return this.http.get<TagKind>(this.baseUrl + 'tagkinds');
}


getAttacksOfTag(tagId: number): Observable<Pentest[]> {
  return this.http.get<Pentest[]>(this.baseUrl + 'pentests/' + tagId);
}

getPentestDetails( websiteId: number, pentestId: number): Observable<PentestWithDetailsAgent>{
  return this.http.get<PentestWithDetailsAgent>(this.baseUrl + 'pentestSketchDetails/' +websiteId+"/"+ pentestId);
}

carryOnPentest(pentest: PentestToCarryOn): Observable<PentestOutcomeAgent> {
  return this.http.post<PentestOutcomeAgent>(this.baseUrl + 'carryOnPentest', pentest);
}

getWebsite(url: string): Observable<Website>{
  return this.http.get<Website>(this.baseUrl + 'website/'+url);
}

getPentestsProvideredrResource(resourceId : number): Observable<Pentest[]>{
    return this.http.get<Pentest[]>(this.baseUrl+"pentestsProvidedResource/"+resourceId);
}

getResources(pentestId: number,websiteId : number): Observable<Resource[]>{
    return this.http.get<Resource[]>(this.baseUrl+"pentestResources/"+pentestId+"/"+websiteId);
}

}
