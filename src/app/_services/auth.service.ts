import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import{JwtHelperService} from '@auth0/angular-jwt';
import{map} from 'rxjs/operators';
import { environment } from 'src/environments/environment';
@Injectable({
  providedIn: 'root'
})
export class AuthService {
  baseUrl=environment.apiUrl+'auth/';
  jwtHelper= new JwtHelperService();
  decodeToken: any;
constructor(private http: HttpClient) { }


login(model: any){
  return this.http
  .post(this.baseUrl+'login/',model)
  .pipe(
    map((response: any)=>{
      const user=response;
      if(user){
        localStorage.setItem('token',user.token);
       this.decodeToken=this.jwtHelper.decodeToken(user.token);
       console.log(this.decodeToken);
      }
    })
    );
} 

register(model:any){
  return this.http.post(this.baseUrl+'register',model);//jeśli zwraca observable to trzeba nasłuchowac  w komponencie, ta zwraca observable, 
}                                                    //można to sprawdzić poprzez najchanie na post i przeskrolowanie tego co wyskoczy

  loggedIn(){
    const token=localStorage.getItem('token');
    return !this.jwtHelper.isTokenExpired(token);
  }
}
